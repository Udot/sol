%div.row
  %div.span12.columns
    %h2 Dashboard
    %legend Status of the moutain
    %table.zebra-striped{:style => "margin-bottom: 0;"}
      %thead
        %tr
          %th Name
          %th Description
          %th Status
          %th
      - if @services.count > 0
        - @services.each do |service|
          %tbody
            %tr
              %td= service["name"]
              %td= service["description"]
              %td= service["status"]
              %td
                %a{:href => service["url"]}
%div.row
  %div.span12.columns
    %h3 Eggs
    %legend Is the coop ok ?
    %table.zebra-striped{:style => "margin-bottom: 0;"}
      %thead
        %tr
          %th Name
          %th Status
          %th Rev
      - if @eggs.count > 0
        - @eggs.each do |egg|
          %tbody
            %tr
              %td= egg.name
              %td= egg.git_repository.updated_status
              %td= egg.git_repository.last_rev.slice(0..8) + '..' if (egg.git_repository && egg.git_repository.last_rev)
%div.row
  %div.span12.columns
    %h3 Sub modules
    %legend modules api keys (keep them secret)
    %table.zebra-striped{:style => "margin-bottom: 0;"}
      %thead
        %tr
          %th Service
          %th Login
          %th Token
          %th Status
        %tbody
          - sub_t = ''
          - 40.times { sub_t << '*' }
          %tr
            %td Git gate
            %td= Settings.mercure_api.username
            %td.token
              %span.secret#token1= Settings.mercure_api.token
              %span#hide1= sub_t
              %a.btn.info.secretB{:rel => "token1"} Show
            %td= MercureApi.gate_status
          - if ApiUser.count > 0
            %tr
              %td Git shell
              %td= ApiUser.first.login
              %td.token
                %span.secret#token2= ApiUser.first.token
                %span#hide2= sub_t
                %a.btn.info.secretB{:rel => "token2"} Show
              %td not available
          - else
            %tr
              %td Git shell
              %td.error You must run
              %td.error bundle exec thor setup:user_init
              %td